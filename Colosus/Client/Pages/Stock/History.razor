@page "/Stock/History/{ProductPublicKey}"
@using Colosus.Client.Blazor.Services.Product
@using Colosus.Entity.Concretes
@using Colosus.Entity.Concretes.DatabaseModel
@using Colosus.Entity.Concretes.RequestModel
@using Colosus.Operations.Abstracts
@inject IProductService productService
@inject IDataConverter dataConverter
<div class="container">
    <div class="container-header">
        <h3>Stok Geçmişi</h3>
    </div>

    @if (Stocks != null && Stocks.Count > 0)
    {

        <table>
            <thead>
                <tr>
                    <th>Miktar</th>
                    <th>Tarih</th>
                    <th>Giren Kişi</th>
                    <th>Açıklama</th>
                    <th>Operasyon</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Stocks)
                {
                    <tr>
                        <td>@item.Amount</td>
                        <td>@item.CreateDate.ToString()</td>
                        <td>@item.UserFirstAndLastName.ToString()</td>
                        <td>@item.Description</td>
                        <td><Colosus.Client.Blazor.Components.Button Icon="fa fa-remove" OnClick="async ()=> await Delete(item.PublicKey)"></Colosus.Client.Blazor.Components.Button></td>
                    </tr>
                }
            </tbody>
        </table>
    }


</div>
@code {

    [Parameter] public string ProductPublicKey { get; set; }

    List<Colosus.Entity.Concretes.DTO.ProductStockDTO> Stocks = new();

    protected override async Task OnInitializedAsync()
    {
        await DataRefresh();
    }

    public async Task DataRefresh()
    {
        var res = await productService.GetStockHistoryDTO(ProductPublicKey);
        Stocks = res.Data;
        StateHasChanged();
    }

    public async Task Delete(string StockPublicKey)
    {
        RequestResult requestResult = await productService.DeleteStock(StockPublicKey);
        if (requestResult != null && requestResult.Ok())
            await DataRefresh();
    }
}
