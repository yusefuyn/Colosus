@page "/Login"
@using Colosus.Client.Blazor.Services
@using Colosus.Client.Blazor.Services.Login
@using Colosus.Entity.Concretes
@using Colosus.Entity.Concretes.DatabaseModel
@using Colosus.Entity.Concretes.RequestModel
@using Colosus.Operations.Abstracts
@inject ILoginService loginService
@inject IHash hash
@inject CookieService cookieService
@inject NavigationManager navigationManager


<div class="center-container">
    <div class="container-header">
        <h3>Giriş yap</h3>
    </div>
    <div style="max-width:400px">
        <Colosus.Client.Blazor.Components.Entry @bind-Text="user.UserName"
                                                Type="Components.Entry.EntryTypeEnum.Text"
                                                Placeholder="Kullanıcı Adı"></Colosus.Client.Blazor.Components.Entry>
        <Colosus.Client.Blazor.Components.Entry @bind-Text="user.Password"
                                                Type="Components.Entry.EntryTypeEnum.Password"
                                                Placeholder="Şifre"></Colosus.Client.Blazor.Components.Entry>
        <Colosus.Client.Blazor.Components.Label>Hesabınız mı yok?<a href="/Register">Hemen Oluşturun</a></Colosus.Client.Blazor.Components.Label>
        <Colosus.Client.Blazor.Components.Button Text="Giriş yap" OnClick="async()=>await LoginOpAsync()"></Colosus.Client.Blazor.Components.Button>
    </div>
</div>
@code {
    LoginUserRequestModel user = new();

    public async Task LoginOpAsync()
    {
        string PassHash = hash.Calc(user.Password);
        var result = await loginService.LoginAsync(user.UserName, PassHash);
        if (result.Result == EnumRequestResult.Ok)
        {
            await AppState.SetUserPublicKey(result.Data.UserPublicKey);
            await AppState.SetToken(result.Data.Token);
            await AppState.SetUserName(user.UserName);
            navigationManager.NavigateTo("/");
            navigationManager.Refresh();
            StateHasChanged();
        }
        AppState.AddMessage(result.Description);
    }
}
