@page "/Customer/Add"
@using Colosus.Client.Blazor.Services.Customer
@using Colosus.Entity.Concretes.DatabaseModel
@using Colosus.Entity.Concretes.RequestModel
@inject ICustomerService customerService
@inject NavigationManager navigationManager
<div class="container">
    <div class="row">
        <div class="col-4">
            <Colosus.Client.Blazor.Components.Button Text="Hızlı"
                                              Style="width:100%; min-width:100%;"
                                              OnClick="()=>VisibleFastCustomer()"></Colosus.Client.Blazor.Components.Button>
        </div>
        <div class="col-4">
            <Colosus.Client.Blazor.Components.Button Text="Bireysel"
                                              Style="width:100%; min-width:100%;"
                                              OnClick="()=>VisibleIndividualCustomer()"></Colosus.Client.Blazor.Components.Button>
        </div>
        <div class="col-4">
            <Colosus.Client.Blazor.Components.Button Text="Kurumsal"
                                              Style="width:100%; min-width:100%;"
                                              OnClick="()=>VisibleCorporateCustomer()"></Colosus.Client.Blazor.Components.Button>
        </div>
    </div>
    <div class="center-container" style="display:@iCustomer.ToString()">
        <div class="container-header">
            <h3>Bireysel Müşteri Ekle</h3>
        </div>

        <Colosus.Client.Blazor.Components.Entry Placeholder="Adı"
                                         @bind-Text="individualCustomer.Name"></Colosus.Client.Blazor.Components.Entry>
        <Colosus.Client.Blazor.Components.Entry Placeholder="Ortanca Adı"
                                         @bind-Text="individualCustomer.MiddleName"></Colosus.Client.Blazor.Components.Entry>
        <Colosus.Client.Blazor.Components.Entry Placeholder="Soy adı" @bind-Text="individualCustomer.LastName"></Colosus.Client.Blazor.Components.Entry>
        <Colosus.Client.Blazor.Components.Entry Placeholder="Not"
                                         @bind-Text="individualCustomer.Note"></Colosus.Client.Blazor.Components.Entry>
        <Colosus.Client.Blazor.Components.Entry Placeholder="Doğum Tarihi"
                                         Type="Components.Entry.EntryTypeEnum.Date"
                                         TextChanged="(e)=> individualCustomer.BirthDate = DateTime.Parse(e)"></Colosus.Client.Blazor.Components.Entry>
        <Colosus.Client.Blazor.Components.CheckBox Text="Hızlı Satış" @bind-IsChecked="individualCustomer.VisibleFastOperation"></Colosus.Client.Blazor.Components.CheckBox>

        <br />
        <br />

        <Colosus.Client.Blazor.Components.Entry Placeholder="İletişim Tipi" @bind-Text="icContactAddress.Type"></Colosus.Client.Blazor.Components.Entry>
        <Colosus.Client.Blazor.Components.Entry Placeholder="Değer"
                                         @bind-Text="icContactAddress.Value"></Colosus.Client.Blazor.Components.Entry>
        <Colosus.Client.Blazor.Components.Entry Placeholder="Not"
                                         @bind-Text="icContactAddress.Note"></Colosus.Client.Blazor.Components.Entry>
        <Colosus.Client.Blazor.Components.Button Text="İletişim yolu ekle" OnClick="()=>{ individualCustomer.ContactAddresses.Add(icContactAddress); icContactAddress = new();StateHasChanged(); }"></Colosus.Client.Blazor.Components.Button>
        @foreach (var item in individualCustomer.ContactAddresses)
        {
            <div>
                @item.Type @item.Value @item.Note
                <Colosus.Client.Blazor.Components.Button Icon="fa fa-remove"
                                                  OnClick="()=> { individualCustomer.ContactAddresses.Remove(item);StateHasChanged(); }"></Colosus.Client.Blazor.Components.Button>
            </div>
        }

        <br />
        <br />
        <Colosus.Client.Blazor.Components.Button Text="Ekle"
                                          OnClick="async()=>await AddICustomer()"></Colosus.Client.Blazor.Components.Button>

    </div>


    <div class="center-container" style="display:@cCustomer.ToString()">
        <div class="container-header">
            <h3>Kurumsal Müşteri Ekle</h3>
        </div>

        <Colosus.Client.Blazor.Components.Entry Placeholder="Adı"
                                         @bind-Text="corporateCustomer.Name"></Colosus.Client.Blazor.Components.Entry>

        <Colosus.Client.Blazor.Components.Entry Placeholder="Adresi"
                                         @bind-Text="corporateCustomer.Address"></Colosus.Client.Blazor.Components.Entry>

        <Colosus.Client.Blazor.Components.Entry Placeholder="Vergi Dairesi"
                                         @bind-Text="corporateCustomer.TaxOffice"></Colosus.Client.Blazor.Components.Entry>

        <Colosus.Client.Blazor.Components.Entry Placeholder="Vergi No"
                                         @bind-Text="corporateCustomer.TaxNo"></Colosus.Client.Blazor.Components.Entry>
        <Colosus.Client.Blazor.Components.CheckBox Text="Hızlı Satış" @bind-IsChecked="corporateCustomer.VisibleFastOperation"></Colosus.Client.Blazor.Components.CheckBox>


        <br />
        <br />

        <Colosus.Client.Blazor.Components.Entry Placeholder="İletişim Tipi" @bind-Text="ccContactAddress.Type"></Colosus.Client.Blazor.Components.Entry>
        <Colosus.Client.Blazor.Components.Entry Placeholder="Değer"
                                         @bind-Text="ccContactAddress.Value"></Colosus.Client.Blazor.Components.Entry>
        <Colosus.Client.Blazor.Components.Entry Placeholder="Not"
                                         @bind-Text="ccContactAddress.Note"></Colosus.Client.Blazor.Components.Entry>
        <Colosus.Client.Blazor.Components.Button Text="İletişim yolu ekle" OnClick="()=>{ corporateCustomer.ContactAddresses.Add(ccContactAddress); ccContactAddress = new();StateHasChanged(); }"></Colosus.Client.Blazor.Components.Button>
        @foreach (var item in corporateCustomer.ContactAddresses)
        {
            <div>
                @item.Type @item.Value @item.Note
                <Colosus.Client.Blazor.Components.Button Icon="fa fa-remove"
                                                  OnClick="()=> { corporateCustomer.ContactAddresses.Remove(item);StateHasChanged(); }"></Colosus.Client.Blazor.Components.Button>
            </div>
        }

        <br />
        <br />

        <Colosus.Client.Blazor.Components.Entry Placeholder="Ödeme Adresi" @bind-Text="paymentAddress.Address"></Colosus.Client.Blazor.Components.Entry>
        <Colosus.Client.Blazor.Components.Entry Placeholder="Ödeme Bankası"
                                         @bind-Text="paymentAddress.Bank"></Colosus.Client.Blazor.Components.Entry>
        <Colosus.Client.Blazor.Components.Entry Placeholder="Not"
                                         @bind-Text="paymentAddress.Note"></Colosus.Client.Blazor.Components.Entry>
        <Colosus.Client.Blazor.Components.Button Text="Ödeme yolu ekle" OnClick="()=>{ corporateCustomer.PaymentAddresses.Add(paymentAddress); paymentAddress = new();StateHasChanged(); }"></Colosus.Client.Blazor.Components.Button>
        @foreach (var item in corporateCustomer.PaymentAddresses)
        {
            <div>
                @item.Address @item.Bank @item.Note
                <Colosus.Client.Blazor.Components.Button Icon="fa fa-remove"
                                                  OnClick="()=> { corporateCustomer.PaymentAddresses.Remove(item);StateHasChanged(); }"></Colosus.Client.Blazor.Components.Button>
            </div>
        }

        <br />
        <br />
        <Colosus.Client.Blazor.Components.Button Text="Ekle"
                                          OnClick="async()=>await AddCCustomer()"></Colosus.Client.Blazor.Components.Button>

    </div>


    <div class="center-container" style="display:@fCustomer.ToString()">
        <div class="container-header">
            <h3>Hızlı Müşteri Ekle</h3>
        </div>
        <Colosus.Client.Blazor.Components.Entry Placeholder="Adı" @bind-Text="fastCustomerCreateModel.Name"></Colosus.Client.Blazor.Components.Entry>
        <br />
        <br />
        <Colosus.Client.Blazor.Components.Button Text="Ekle"
                                          OnClick="async()=>await AddFCustomer()"></Colosus.Client.Blazor.Components.Button>
    </div>
</div>
@code {
    string cCustomer = "none";
    string iCustomer = "";
    string fCustomer = "none";


    Colosus.Entity.Concretes.CreateModel.IndividualCustomerCreateModel individualCustomer = new();
    ContactAddress icContactAddress = new();
    Colosus.Entity.Concretes.CreateModel.CorporateCustomerCreateModel corporateCustomer = new();
    ContactAddress ccContactAddress = new();
    Colosus.Entity.Concretes.CreateModel.FastCustomerCreateModel fastCustomerCreateModel = new();
    PaymentAddress paymentAddress = new();


    public async Task AddICustomer()
    {
        individualCustomer.FirmPublicKey = AppState.SelectedFirmPublicKey;
        var res = await customerService.AddIndividualCustomer(individualCustomer);
        if (res != null && res.Result == EnumRequestResult.Ok)
            navigationManager.NavigateTo("/Customer/Index");
        AppState.AddMessage(res.Description);
    }

    public async Task AddCCustomer()
    {
        corporateCustomer.FirmPublicKey = AppState.SelectedFirmPublicKey;
        var res = await customerService.AddCorporateCustomer(corporateCustomer);
        if (res != null && res.Result == EnumRequestResult.Ok)
            navigationManager.NavigateTo("/Customer/Index");
        AppState.AddMessage(res.Description);
    }

    public async Task AddFCustomer()
    {
        fastCustomerCreateModel.FirmPublicKey = AppState.SelectedFirmPublicKey;
        var res = await customerService.AddFastCustomer(fastCustomerCreateModel);
        if (res != null && res.Result == EnumRequestResult.Ok)
            navigationManager.NavigateTo("/Customer/Index");
        AppState.AddMessage(res.Description);
    }
    public void VisibleIndividualCustomer()
    {
        iCustomer = "";
        cCustomer = "None";
        fCustomer = "none";
        StateHasChanged();
    }

    public void VisibleCorporateCustomer()
    {
        iCustomer = "None";
        fCustomer = "none";
        cCustomer = "";
        StateHasChanged();
    }

    public void VisibleFastCustomer()
    {
        iCustomer = "None";
        fCustomer = "";
        cCustomer = "None";
        StateHasChanged();
    }
}
